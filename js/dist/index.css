body {
    background-color: rgb(0, 0, 0);
    margin: 0;
    padding: 0;
}
.container {
    position: fixed;
    display: flex;
    justify-content: center;
    align-items: center;
}
#clock {
    --hour: 1;
    --minute: 47;
    --second: 10;
    --millisecond: 10;
    height: 100vh;
    width: 100vw;
    display: flex;
    justify-content: center;
    align-items: center;
}
.dot {
    /* this is all responsible for the dots fading out */
    /* add 0.1 to avoid a divide by zero */
    --dotMin: calc(var(--i) - 0.1);
    /* u is similar to the heaviside step function
    it is 1 when --dotMin < --minute and 0 when --dotMin > --minute
    this is used instead of some form of if/else */
    --u: calc((max(var(--dotMin), var(--minute)) - var(--dotMin)) / (var(--minute) - var(--dotMin)));
    /* --minInFuture finds how far the dot is from the current time */
    --minInFuture: calc(
        var(--dotMin) - var(--minute)
        + (60 * var(--u))
    );
    background: hsl(0 0% min(100%, ((var(--minInFuture) * -0.05) + 3) * 100%));


    border-radius: 1rem;
    width: 0.5rem;
    height: 0.5rem;
    position: fixed;
    transform:
        rotate(calc((1turn * var(--i) / 60) - 0.25turn))
        translate(min(40vh, 40vw))
}
.dot.stop {
    width: 1rem;
    height: 1rem;
}
.hand {
    background-color: white;
    height: 0.3rem;
    position: fixed;
    border-radius: 0.2rem;
}
#minuteHand {
    --w: min(35vh, 35vw);
    width: var(--w);
    --theta: calc(
        (1turn * var(--minute) / 60)
        + (1turn * var(--second) / (60 * 60))
        + (1turn * var(--millisecond) / (60 * 60 * 1000))
        - 0.25turn
    );
    transform:
        rotate(var(--theta))
        translate(calc(var(--w) / 2))
}
#hourHand {
    --w: min(23vh, 23vw);
    width: var(--w);
    --theta: calc(
        (1turn * var(--hour) / 12)
        + (1turn * var(--minute) / 720)
        + (1turn * var(--second) / (12 * 60 * 60))
        - 0.25turn
    );
    transform: rotate(var(--theta))
    translate(calc(var(--w) / 2))
}
canvas {
    outline-style: solid;
    outline-color: rgb(43, 43, 43);
    outline-width: 1px;
    position: absolute;
    left: 0;
    top: 0;
}